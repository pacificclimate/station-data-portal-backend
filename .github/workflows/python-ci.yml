name: Python CI

on: push

jobs:
  test:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system-level dependencies
      env:
        PIP_INDEX_URL: https://pypi.pacificclimate.org/simple
      run: |
        sudo apt-get install -y curl ca-certificates gnupg
        sudo su -c 'curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -'
        sudo su -c "echo deb http://apt.postgresql.org/pub/repos/apt `lsb_release -cs`-pgdg main >/etc/apt/sources.list.d/pgdg.list"
        sudo apt-get update
        sudo apt install postgresql-13 postgresql-13-postgis-3

    - name: Install pipenv
      run: |
        pip install -U pipenv

    - id: cache-pipenv
      uses: actions/cache@v2
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

    - name: Install dependencies if changed
      if: steps.cache-pipenv.outputs.cache-hit != 'true' && ${{ matrix.python-version == '3.8' }}
      env:
        PIP_INDEX_URL: https://pypi.pacificclimate.org/simple
      run: |
        pipenv install --deploy --dev
        pipenv install .

    - name: Re-install dependencies if alternative python version
      if: ${{ matrix.python-version != '3.8' }}
      env:
        PIP_INDEX_URL: https://pypi.pacificclimate.org/simple
      run: |
        mv Pipfile.lock do-not-use
        pipenv install --python ${{ matrix.python-version }} --dev

    - name: Test with pytest (full)
      if: github.ref == 'refs/heads/master'
      run: |
        pipenv run pytest -m "not online" -v

    - name: Test with pytest (fast)
      if: github.ref != 'refs/heads/master'
      run: |
        pipenv run pytest -m "not online and not slow" -v

    - name: Check code formatting
      run: black . --check
