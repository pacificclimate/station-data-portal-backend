name: Python CI

on: push

jobs:
  test:

    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system-level dependencies
      env:
        PIP_INDEX_URL: https://pypi.pacificclimate.org/simple
      # Ubuntu 20.04 has following postgres packages by default:
      # postgresql-14/now 14.8-1.pgdg20.04+1 amd64 [installed,local]
      # postgresql-client-14/now 14.8-1.pgdg20.04+1 amd64 [installed,local]
      # postgresql-client-common/now 250.pgdg20.04+1 all [installed,local]
      # postgresql-common/now 250.pgdg20.04+1 all [installed,local]
      #
      # Ubuntu 22.04 has following postgres packages by default:
      # postgresql-14/now 14.8-1.pgdg22.04+1 amd64 [installed,local]
      # postgresql-client-14/now 14.8-1.pgdg22.04+1 amd64 [installed,local]
      # postgresql-client-common/now 250.pgdg22.04+1 all [installed,local]
      # postgresql-common/now 250.pgdg22.04+1 all [installed,local]
      run: |
        sudo apt list --installed | grep postgres
        sudo apt-get update
        echo "downgrading postgresql-14"
        sudo apt-get install -yq --allow-downgrades postgresql-14=14.8-0ubuntu0.22.04.1
        echo "installing postgresql-14-postgis-3"
        sudo apt-get install -yq postgresql-14-postgis-3
        echo "installing postgresql-plpython3-14"
        sudo apt-get install -yq postgresql-plpython3-14

    - name: Install pipenv
      run: |
        pip install -U pipenv==2022.3.28

    - id: cache-pipenv
      uses: actions/cache@v2
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

    - name: Install Python dependencies if changed
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      env:
        PIP_INDEX_URL: https://pypi.pacificclimate.org/simple
      run: |
        pipenv install --deploy --dev

    - name: Test with pytest
      run: |
        pipenv run pytest -m "not online and not slow" -v tests/unit
